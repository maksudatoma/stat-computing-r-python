name: Render and deploy Quarto files
on:
  push:
  pull_request:

jobs:
  quarto-render-and-deploy:
    runs-on: ubuntu-latest
    container: rocker/verse:latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_PAT: ${{ secrets.GH_PAT }}
      GITHUB_PAT: ${{ secrets.GH_PAT }}

    steps:
    - uses: actions/checkout@v4

    - name: Change ownership of /github/home
      run: sudo chown -R $(whoami) /github/home
    - uses: actions/setup-python@v5
      with:
        python-version-file: '.python-version'
        cache-dependency-path: requirements.txt
        cache: 'pip'
      env:
        PIP_ROOT_USER_ACTION: ignore

    - id: python_cache
      uses: actions/cache@v3
      with:
        path: venv
        key: pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}

    - if: steps.python_cache.outputs.cache-hit != 'true'
      run: |
        # Check if venv exists (restored from secondary keys if any, and delete)
        # You might not need this line if you only have one primary key for the venv caching
        # I kept it in my code as a fail-safe
        if [ -d "venv" ]; then rm -rf venv; fi

        # Re-create the venv
        python3 -m venv venv

        # Install dependencies
        venv/bin/python3 -m pip install -r requirements.txt


    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt upgrade
        # sudo apt install -y python3-virtualenv python3-dev python3-venv
        sudo apt install -y libudunits2-dev libgdal-dev
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y
      shell: /bin/bash {0}


    - name: Install and activate renv
      run: |
        install.packages("renv")
        renv::activate()
      shell: Rscript {0}

    - name: Set PATH for RENV
      shell: bash
      run: |
        echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV

    - name: Restore Renv package cache
      uses: actions/cache@v3
      with:
        path: ${{ env.RENV_PATHS_ROOT }}
        key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
        restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-

    - name: Install R dependencies
      if: runner.os == 'Linux'
      shell: Rscript {0}
      run: |
        pkgs <- c("markdown", "downlit", "xml2")
        pkgs <- setdiff(pkgs, installed.packages())
        if (length(pkgs) > 0) install.packages(pkgs)
        options(renv.download.override = utils::download.file)
        renv::restore()

    # - name: Setup python virtualenv
    #   run: |
    #     if(!"reticulate" %in% installed.packages()) install.packages("reticulate")
    #     reticulate::virtualenv_create("book", packages = c("matplotlib", "numpy"))
    #     reticulate::virtualenv_install("book", c("numpy", "pandas", "lxml"),
    #       pip_options = c("--no-binary=numpy",  "--force-reinstall"))

      # shell: Rscript {0}

    - uses: quarto-dev/quarto-actions/setup@v2
      with:
        version: 1.4.515
        tinytex: true

    - name: "Quarto Version"
      run: |
        quarto --version


    - name: Render Quarto Project
      shell: /bin/bash {0}
      run: |
        quarto render --execute-debug

    - name: "Deploy to gh-pages"
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
